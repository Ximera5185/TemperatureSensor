#include "max6675.h"
#include <EEPROM.h>
volatile int counter = 0;  // переменная-счётчик
int ledPin = 13;                    // переменная с пином подключенного светодиода

int temperature;
int criticalTemperature;
int lastCritical;
 long lastflash;
int RPM;                          //переменная оборотов
String inputDataTemperaturePort = "";


int thermoDO = 3;                     //он же SO датчик температуры
int thermoCS = 4;                     //CS
int thermoCLK = 5;                   //он же SCK датчик температуры
int vccPin = 6;                      //vcc пин для питания датчик температуры
int gndPin = 7;                     //gnd пин для земли датчик температуры

String key = "term";
String package;

MAX6675 thermocouple(thermoCLK, thermoCS, thermoDO);

void setup() {
  Serial.begin(9600);
  //активируем питание и землю
  pinMode(vccPin, OUTPUT);
  digitalWrite(vccPin, HIGH);
  pinMode(gndPin, OUTPUT);
  digitalWrite(gndPin, LOW);
  pinMode(ledPin, OUTPUT);         // назначаем наш пин выходом
  pinMode(8, INPUT);              //Используем 5 пин датчик оборотов
// подключили кнопку на D2 и GND
  pinMode(2, FALLING);  //FALLING (падение) – срабатывает при изменении сигнала с HIGH на LOW
  attachInterrupt(0, sens, FALLING); //FALLING (падение) – срабатывает при изменении сигнала с HIGH на LOW

  //ждем стабилизации чипа MAX
  delay(500);
}

void loop() {
  criticalTemperature = 100;
  //Выводим показания в монитор порта

  temperature = (int)thermocouple.readCelsius();

  package = key + temperature;

  Serial.println(package);

  inputDataTemperaturePort = Serial.readString();

  criticalTemperature = inputDataTemperaturePort.toInt();

  if (criticalTemperature > 0) {
    EEPROM.update(0, criticalTemperature);
  }

  TurnAlarm(EEPROM.read(0));

Serial.println(RPM);                                        //вывод оборотов в монитор порта
  if ((micros() - lastflash) > 1000000) {                       //если сигнала нет больше секунды
    RPM=0;                                                      //считаем что RPM 0
  }
  //delay(1000);  // Найти у Гайвера цикл таймера Gyver
}

void TurnAlarm(int criticalTemperature) {
  if (temperature > criticalTemperature) {
    digitalWrite(ledPin, HIGH);
  } else {
    digitalWrite(ledPin, LOW);
  }
}

void sens() {
  RPM=60/((float)(micros()-lastflash)/1000000);                 //расчёт оборотов
  lastflash=micros();                                           //запомнить время последнего оборота
}